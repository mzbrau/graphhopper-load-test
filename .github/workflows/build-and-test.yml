name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for MinVer
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: |
        dotnet restore src/GraphhopperLoadTest/GraphhopperLoadTest/GraphhopperLoadTest.csproj
        dotnet restore src/GraphhopperSimulator/GraphhopperSimulator.csproj
    
    - name: Build Load Test Tool
      run: dotnet build src/GraphhopperLoadTest/GraphhopperLoadTest/GraphhopperLoadTest.csproj --configuration Release --no-restore
    
    - name: Build Simulator
      run: dotnet build src/GraphhopperSimulator/GraphhopperSimulator.csproj --configuration Release --no-restore
    
    - name: Test Load Test Tool Help
      run: |
        cd src/GraphhopperLoadTest/GraphhopperLoadTest
        timeout 30s dotnet run --configuration Release -- --help || true
    
    - name: Test Single File Publish (Linux)
      run: |
        dotnet publish src/GraphhopperLoadTest/GraphhopperLoadTest/GraphhopperLoadTest.csproj \
          --configuration Release \
          --runtime linux-x64 \
          --self-contained true \
          --output ./test-publish \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=true
        
        # Check if the single file was created and get its size
        ls -la ./test-publish/
        FILE_SIZE=$(stat -f%z ./test-publish/GraphhopperLoadTest 2>/dev/null || stat -c%s ./test-publish/GraphhopperLoadTest)
        echo "Single file size: $FILE_SIZE bytes ($(echo "$FILE_SIZE / 1024 / 1024" | bc -l | cut -c1-4) MB)"
        
        # Verify it's executable
        ./test-publish/GraphhopperLoadTest --version || echo "Version check completed"
